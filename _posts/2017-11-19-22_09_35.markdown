---
layout:     post
title:      "Convert pdf into jpg in Mac and optimize or resize it"
subtitle:   "for efficiency"
date:       2017-11-19
author:     "Ziping"
header-img: "img/python.jpg"
catalog: true
tags:
    - python
---

install ``imagemagick`` and ``gs`` first. 

```shell
brew install imagemagick;
brew install gs;
```

a example

```shell
convert 1.pdf 1.jpg
```

### a script for converting massively

```python
import os

path = "my path"

def gci (path):
    """this is a statement"""
    parents = os.listdir(path)
    for parent in parents:
        child = os.path.join(path,parent)
        print(child)
        if os.path.isdir(child):
            gci(child)
            print(child)
        else:
            if child.split(".")[1] == "pdf":
                os.system("convert " + child + " " + child.split(".")[0] + ".jpg")

gci(path)
```

## optimize jpg pictures

Target:

- resize picture
- optimize the size



### Install packages

```shell
brew install imagemagick;
brew install jpegoptim;
```

### Basic Command

```shell
# three types of reshape
convert -resize 85%x85% $img $img-resized;
convert -resize 1024x800 $img $img-resized;
convert -resize 1024x $img $img-resized;
```

```shell
# optimize the size
jpegoptim --size=400 $img
jpegoptim --max=80 $img
```

### Massive manipulation

```shell
PHOTODIR=$1
PHOTOFORMAT=$2

IFS_OLD=$IFS # 先保存 IFS 变量
IFS=$'\n' # 将 IFS 改为换行符

if [ ! -d "$PHOTODIR"/new ]; then
    mkdir "$PHOTODIR"/new
fi

cd $PHOTODIR;

for img in `find ./ -name "*.$PHOTOFORMAT"`; do 
    convert -resize 40%x40% $img new/$img;
    jpegoptim --max=95 new/$img
done
IFS=IFS_OLD
```

